ARM GAS  /tmp/ccTCtcF4.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._write,"ax",%progbits
  20              		.align	1
  21              		.global	_write
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	_write:
  27              	.LVL0:
  28              	.LFB133:
  29              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2023 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "can.h"
  22:Core/Src/main.c **** #include "usart.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include <stdio.h>
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
ARM GAS  /tmp/ccTCtcF4.s 			page 2


  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  54:Core/Src/main.c **** int _write(int file, char *ptr, int len) {
  30              		.loc 1 54 42 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 54 42 is_stmt 0 view .LVU1
  35 0000 10B5     		push	{r4, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 8
  38              		.cfi_offset 4, -8
  39              		.cfi_offset 14, -4
  40 0002 1446     		mov	r4, r2
  55:Core/Src/main.c ****   HAL_UART_Transmit(&huart2,(uint8_t *)ptr,len,10);
  41              		.loc 1 55 3 is_stmt 1 view .LVU2
  42 0004 0A23     		movs	r3, #10
  43 0006 92B2     		uxth	r2, r2
  44              	.LVL1:
  45              		.loc 1 55 3 is_stmt 0 view .LVU3
  46 0008 0248     		ldr	r0, .L3
  47              	.LVL2:
  48              		.loc 1 55 3 view .LVU4
  49 000a FFF7FEFF 		bl	HAL_UART_Transmit
  50              	.LVL3:
  56:Core/Src/main.c ****   return len;
  51              		.loc 1 56 3 is_stmt 1 view .LVU5
  57:Core/Src/main.c **** }
  52              		.loc 1 57 1 is_stmt 0 view .LVU6
  53 000e 2046     		mov	r0, r4
  54 0010 10BD     		pop	{r4, pc}
  55              	.LVL4:
  56              	.L4:
  57              		.loc 1 57 1 view .LVU7
  58 0012 00BF     		.align	2
ARM GAS  /tmp/ccTCtcF4.s 			page 3


  59              	.L3:
  60 0014 00000000 		.word	huart2
  61              		.cfi_endproc
  62              	.LFE133:
  64              		.section	.text.Error_Handler,"ax",%progbits
  65              		.align	1
  66              		.global	Error_Handler
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
  71              	Error_Handler:
  72              	.LFB136:
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  94:Core/Src/main.c ****   MX_CAN1_Init();
  95:Core/Src/main.c ****   MX_USART2_UART_Init();
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c ****   setbuf(stdout, NULL);
  98:Core/Src/main.c ****   printf("Hello World\n");
  99:Core/Src/main.c ****   CanActivation();
 100:Core/Src/main.c ****   // HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 101:Core/Src/main.c ****   /* USER CODE END 2 */
 102:Core/Src/main.c **** 
ARM GAS  /tmp/ccTCtcF4.s 			page 4


 103:Core/Src/main.c ****   /* Infinite loop */
 104:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 105:Core/Src/main.c ****   while (1)
 106:Core/Src/main.c ****   {
 107:Core/Src/main.c ****     /* USER CODE END WHILE */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 110:Core/Src/main.c ****     CanVescDrive(kRpm, 0x5C, 0);
 111:Core/Src/main.c ****   }
 112:Core/Src/main.c ****   /* USER CODE END 3 */
 113:Core/Src/main.c **** }
 114:Core/Src/main.c **** 
 115:Core/Src/main.c **** /**
 116:Core/Src/main.c ****   * @brief System Clock Configuration
 117:Core/Src/main.c ****   * @retval None
 118:Core/Src/main.c ****   */
 119:Core/Src/main.c **** void SystemClock_Config(void)
 120:Core/Src/main.c **** {
 121:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 122:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 125:Core/Src/main.c ****   */
 126:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 127:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 130:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 134:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 142:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 148:Core/Src/main.c ****   */
 149:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 150:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 151:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 157:Core/Src/main.c ****   {
 158:Core/Src/main.c ****     Error_Handler();
 159:Core/Src/main.c ****   }
ARM GAS  /tmp/ccTCtcF4.s 			page 5


 160:Core/Src/main.c **** }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE END 4 */
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /**
 167:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 168:Core/Src/main.c ****   * @retval None
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c **** void Error_Handler(void)
 171:Core/Src/main.c **** {
  73              		.loc 1 171 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ Volatile: function does not return.
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78              		@ link register save eliminated.
 172:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 173:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 174:Core/Src/main.c ****   __disable_irq();
  79              		.loc 1 174 3 view .LVU9
  80              	.LBB4:
  81              	.LBI4:
  82              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  /tmp/ccTCtcF4.s 			page 6


  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  /tmp/ccTCtcF4.s 			page 7


  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  83              		.loc 2 140 27 view .LVU10
  84              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  85              		.loc 2 142 3 view .LVU11
  86              		.syntax unified
ARM GAS  /tmp/ccTCtcF4.s 			page 8


  87              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  88 0000 72B6     		cpsid i
  89              	@ 0 "" 2
  90              		.thumb
  91              		.syntax unified
  92              	.L6:
  93              	.LBE5:
  94              	.LBE4:
 175:Core/Src/main.c ****   while (1)
  95              		.loc 1 175 3 discriminator 1 view .LVU12
 176:Core/Src/main.c ****   {
 177:Core/Src/main.c ****   }
  96              		.loc 1 177 3 discriminator 1 view .LVU13
 175:Core/Src/main.c ****   while (1)
  97              		.loc 1 175 9 discriminator 1 view .LVU14
  98 0002 FEE7     		b	.L6
  99              		.cfi_endproc
 100              	.LFE136:
 102              		.section	.text.SystemClock_Config,"ax",%progbits
 103              		.align	1
 104              		.global	SystemClock_Config
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	SystemClock_Config:
 110              	.LFB135:
 120:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 111              		.loc 1 120 1 view -0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 80
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115 0000 00B5     		push	{lr}
 116              	.LCFI1:
 117              		.cfi_def_cfa_offset 4
 118              		.cfi_offset 14, -4
 119 0002 95B0     		sub	sp, sp, #84
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 88
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 122              		.loc 1 121 3 view .LVU16
 121:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 123              		.loc 1 121 22 is_stmt 0 view .LVU17
 124 0004 3422     		movs	r2, #52
 125 0006 0021     		movs	r1, #0
 126 0008 07A8     		add	r0, sp, #28
 127 000a FFF7FEFF 		bl	memset
 128              	.LVL5:
 122:Core/Src/main.c **** 
 129              		.loc 1 122 3 is_stmt 1 view .LVU18
 122:Core/Src/main.c **** 
 130              		.loc 1 122 22 is_stmt 0 view .LVU19
 131 000e 0023     		movs	r3, #0
 132 0010 0293     		str	r3, [sp, #8]
 133 0012 0393     		str	r3, [sp, #12]
 134 0014 0493     		str	r3, [sp, #16]
 135 0016 0593     		str	r3, [sp, #20]
 136 0018 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccTCtcF4.s 			page 9


 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 137              		.loc 1 126 3 is_stmt 1 view .LVU20
 138              	.LBB6:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 139              		.loc 1 126 3 view .LVU21
 140 001a 0093     		str	r3, [sp]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 141              		.loc 1 126 3 view .LVU22
 142 001c 1F4A     		ldr	r2, .L13
 143 001e 116C     		ldr	r1, [r2, #64]
 144 0020 41F08051 		orr	r1, r1, #268435456
 145 0024 1164     		str	r1, [r2, #64]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 146              		.loc 1 126 3 view .LVU23
 147 0026 126C     		ldr	r2, [r2, #64]
 148 0028 02F08052 		and	r2, r2, #268435456
 149 002c 0092     		str	r2, [sp]
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 150              		.loc 1 126 3 view .LVU24
 151 002e 009A     		ldr	r2, [sp]
 152              	.LBE6:
 126:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 153              		.loc 1 126 3 view .LVU25
 127:Core/Src/main.c **** 
 154              		.loc 1 127 3 view .LVU26
 155              	.LBB7:
 127:Core/Src/main.c **** 
 156              		.loc 1 127 3 view .LVU27
 157 0030 0193     		str	r3, [sp, #4]
 127:Core/Src/main.c **** 
 158              		.loc 1 127 3 view .LVU28
 159 0032 1B49     		ldr	r1, .L13+4
 160 0034 0A68     		ldr	r2, [r1]
 161 0036 22F44042 		bic	r2, r2, #49152
 162 003a 42F48042 		orr	r2, r2, #16384
 163 003e 0A60     		str	r2, [r1]
 127:Core/Src/main.c **** 
 164              		.loc 1 127 3 view .LVU29
 165 0040 0A68     		ldr	r2, [r1]
 166 0042 02F44042 		and	r2, r2, #49152
 167 0046 0192     		str	r2, [sp, #4]
 127:Core/Src/main.c **** 
 168              		.loc 1 127 3 view .LVU30
 169 0048 019A     		ldr	r2, [sp, #4]
 170              	.LBE7:
 127:Core/Src/main.c **** 
 171              		.loc 1 127 3 view .LVU31
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 172              		.loc 1 132 3 view .LVU32
 132:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 173              		.loc 1 132 36 is_stmt 0 view .LVU33
 174 004a 0222     		movs	r2, #2
 175 004c 0792     		str	r2, [sp, #28]
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 176              		.loc 1 133 3 is_stmt 1 view .LVU34
 133:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 177              		.loc 1 133 30 is_stmt 0 view .LVU35
ARM GAS  /tmp/ccTCtcF4.s 			page 10


 178 004e 0121     		movs	r1, #1
 179 0050 0A91     		str	r1, [sp, #40]
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 180              		.loc 1 134 3 is_stmt 1 view .LVU36
 134:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 181              		.loc 1 134 41 is_stmt 0 view .LVU37
 182 0052 1021     		movs	r1, #16
 183 0054 0B91     		str	r1, [sp, #44]
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 184              		.loc 1 135 3 is_stmt 1 view .LVU38
 135:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 185              		.loc 1 135 34 is_stmt 0 view .LVU39
 186 0056 0D92     		str	r2, [sp, #52]
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 187              		.loc 1 136 3 is_stmt 1 view .LVU40
 136:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 16;
 188              		.loc 1 136 35 is_stmt 0 view .LVU41
 189 0058 0E93     		str	r3, [sp, #56]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 190              		.loc 1 137 3 is_stmt 1 view .LVU42
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 191              		.loc 1 137 30 is_stmt 0 view .LVU43
 192 005a 0F91     		str	r1, [sp, #60]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 193              		.loc 1 138 3 is_stmt 1 view .LVU44
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 194              		.loc 1 138 30 is_stmt 0 view .LVU45
 195 005c 4FF4A873 		mov	r3, #336
 196 0060 1093     		str	r3, [sp, #64]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 197              		.loc 1 139 3 is_stmt 1 view .LVU46
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 2;
 198              		.loc 1 139 30 is_stmt 0 view .LVU47
 199 0062 0423     		movs	r3, #4
 200 0064 1193     		str	r3, [sp, #68]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 201              		.loc 1 140 3 is_stmt 1 view .LVU48
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 202              		.loc 1 140 30 is_stmt 0 view .LVU49
 203 0066 1292     		str	r2, [sp, #72]
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 204              		.loc 1 141 3 is_stmt 1 view .LVU50
 141:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 205              		.loc 1 141 30 is_stmt 0 view .LVU51
 206 0068 1392     		str	r2, [sp, #76]
 142:Core/Src/main.c ****   {
 207              		.loc 1 142 3 is_stmt 1 view .LVU52
 142:Core/Src/main.c ****   {
 208              		.loc 1 142 7 is_stmt 0 view .LVU53
 209 006a 07A8     		add	r0, sp, #28
 210 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 211              	.LVL6:
 142:Core/Src/main.c ****   {
 212              		.loc 1 142 6 view .LVU54
 213 0070 80B9     		cbnz	r0, .L11
 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 214              		.loc 1 149 3 is_stmt 1 view .LVU55
ARM GAS  /tmp/ccTCtcF4.s 			page 11


 149:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 215              		.loc 1 149 31 is_stmt 0 view .LVU56
 216 0072 0F23     		movs	r3, #15
 217 0074 0293     		str	r3, [sp, #8]
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 218              		.loc 1 151 3 is_stmt 1 view .LVU57
 151:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 219              		.loc 1 151 34 is_stmt 0 view .LVU58
 220 0076 0221     		movs	r1, #2
 221 0078 0391     		str	r1, [sp, #12]
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 222              		.loc 1 152 3 is_stmt 1 view .LVU59
 152:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 223              		.loc 1 152 35 is_stmt 0 view .LVU60
 224 007a 0023     		movs	r3, #0
 225 007c 0493     		str	r3, [sp, #16]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 226              		.loc 1 153 3 is_stmt 1 view .LVU61
 153:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 227              		.loc 1 153 36 is_stmt 0 view .LVU62
 228 007e 4FF48052 		mov	r2, #4096
 229 0082 0592     		str	r2, [sp, #20]
 154:Core/Src/main.c **** 
 230              		.loc 1 154 3 is_stmt 1 view .LVU63
 154:Core/Src/main.c **** 
 231              		.loc 1 154 36 is_stmt 0 view .LVU64
 232 0084 0693     		str	r3, [sp, #24]
 156:Core/Src/main.c ****   {
 233              		.loc 1 156 3 is_stmt 1 view .LVU65
 156:Core/Src/main.c ****   {
 234              		.loc 1 156 7 is_stmt 0 view .LVU66
 235 0086 02A8     		add	r0, sp, #8
 236 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 237              	.LVL7:
 156:Core/Src/main.c ****   {
 238              		.loc 1 156 6 view .LVU67
 239 008c 20B9     		cbnz	r0, .L12
 160:Core/Src/main.c **** 
 240              		.loc 1 160 1 view .LVU68
 241 008e 15B0     		add	sp, sp, #84
 242              	.LCFI3:
 243              		.cfi_remember_state
 244              		.cfi_def_cfa_offset 4
 245              		@ sp needed
 246 0090 5DF804FB 		ldr	pc, [sp], #4
 247              	.L11:
 248              	.LCFI4:
 249              		.cfi_restore_state
 144:Core/Src/main.c ****   }
 250              		.loc 1 144 5 is_stmt 1 view .LVU69
 251 0094 FFF7FEFF 		bl	Error_Handler
 252              	.LVL8:
 253              	.L12:
 158:Core/Src/main.c ****   }
 254              		.loc 1 158 5 view .LVU70
 255 0098 FFF7FEFF 		bl	Error_Handler
 256              	.LVL9:
ARM GAS  /tmp/ccTCtcF4.s 			page 12


 257              	.L14:
 258              		.align	2
 259              	.L13:
 260 009c 00380240 		.word	1073887232
 261 00a0 00700040 		.word	1073770496
 262              		.cfi_endproc
 263              	.LFE135:
 265              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 266              		.align	2
 267              	.LC0:
 268 0000 48656C6C 		.ascii	"Hello World\000"
 268      6F20576F 
 268      726C6400 
 269              		.section	.text.main,"ax",%progbits
 270              		.align	1
 271              		.global	main
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 276              	main:
 277              	.LFB134:
  71:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 278              		.loc 1 71 1 view -0
 279              		.cfi_startproc
 280              		@ Volatile: function does not return.
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 08B5     		push	{r3, lr}
 284              	.LCFI5:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 3, -8
 287              		.cfi_offset 14, -4
  79:Core/Src/main.c **** 
 288              		.loc 1 79 3 view .LVU72
 289 0002 FFF7FEFF 		bl	HAL_Init
 290              	.LVL10:
  86:Core/Src/main.c **** 
 291              		.loc 1 86 3 view .LVU73
 292 0006 FFF7FEFF 		bl	SystemClock_Config
 293              	.LVL11:
  93:Core/Src/main.c ****   MX_CAN1_Init();
 294              		.loc 1 93 3 view .LVU74
 295 000a FFF7FEFF 		bl	MX_GPIO_Init
 296              	.LVL12:
  94:Core/Src/main.c ****   MX_USART2_UART_Init();
 297              		.loc 1 94 3 view .LVU75
 298 000e FFF7FEFF 		bl	MX_CAN1_Init
 299              	.LVL13:
  95:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 300              		.loc 1 95 3 view .LVU76
 301 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 302              	.LVL14:
  97:Core/Src/main.c ****   printf("Hello World\n");
 303              		.loc 1 97 3 view .LVU77
  97:Core/Src/main.c ****   printf("Hello World\n");
 304              		.loc 1 97 10 is_stmt 0 view .LVU78
 305 0016 094B     		ldr	r3, .L18
ARM GAS  /tmp/ccTCtcF4.s 			page 13


 306 0018 1B68     		ldr	r3, [r3]
  97:Core/Src/main.c ****   printf("Hello World\n");
 307              		.loc 1 97 3 view .LVU79
 308 001a 0021     		movs	r1, #0
 309 001c 9868     		ldr	r0, [r3, #8]
 310 001e FFF7FEFF 		bl	setbuf
 311              	.LVL15:
  98:Core/Src/main.c ****   CanActivation();
 312              		.loc 1 98 3 is_stmt 1 view .LVU80
 313 0022 0748     		ldr	r0, .L18+4
 314 0024 FFF7FEFF 		bl	puts
 315              	.LVL16:
  99:Core/Src/main.c ****   // HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, GPIO_PIN_SET);
 316              		.loc 1 99 3 view .LVU81
 317 0028 FFF7FEFF 		bl	CanActivation
 318              	.LVL17:
 319              	.L16:
 105:Core/Src/main.c ****   {
 320              		.loc 1 105 3 discriminator 1 view .LVU82
 110:Core/Src/main.c ****   }
 321              		.loc 1 110 5 discriminator 1 view .LVU83
 322 002c 9FED050A 		vldr.32	s0, .L18+8
 323 0030 5C21     		movs	r1, #92
 324 0032 0220     		movs	r0, #2
 325 0034 FFF7FEFF 		bl	CanVescDrive
 326              	.LVL18:
 105:Core/Src/main.c ****   {
 327              		.loc 1 105 9 discriminator 1 view .LVU84
 328 0038 F8E7     		b	.L16
 329              	.L19:
 330 003a 00BF     		.align	2
 331              	.L18:
 332 003c 00000000 		.word	_impure_ptr
 333 0040 00000000 		.word	.LC0
 334 0044 00000000 		.word	0
 335              		.cfi_endproc
 336              	.LFE134:
 338              		.text
 339              	.Letext0:
 340              		.file 3 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/arm-none-eabi/include/machine/_default_types.h"
 341              		.file 4 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/arm-none-eabi/include/sys/_stdint.h"
 342              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f446xx.h"
 343              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 344              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 345              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 346              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 347              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 348              		.file 11 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/lib/gcc/arm-none-eabi/11.3.1/include/stddef.h"
 349              		.file 12 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/arm-none-eabi/include/sys/_types.h"
 350              		.file 13 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/arm-none-eabi/include/sys/reent.h"
 351              		.file 14 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/arm-none-eabi/include/sys/lock.h"
 352              		.file 15 "Core/Inc/usart.h"
 353              		.file 16 "/opt/st/stm32cubeclt/GNU-tools-for-STM32/arm-none-eabi/include/stdio.h"
 354              		.file 17 "Core/Inc/can.h"
 355              		.file 18 "Core/Inc/gpio.h"
 356              		.file 19 "<built-in>"
 357              		.file 20 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccTCtcF4.s 			page 14


ARM GAS  /tmp/ccTCtcF4.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccTCtcF4.s:20     .text._write:0000000000000000 $t
     /tmp/ccTCtcF4.s:26     .text._write:0000000000000000 _write
     /tmp/ccTCtcF4.s:60     .text._write:0000000000000014 $d
     /tmp/ccTCtcF4.s:65     .text.Error_Handler:0000000000000000 $t
     /tmp/ccTCtcF4.s:71     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccTCtcF4.s:103    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccTCtcF4.s:109    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccTCtcF4.s:260    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccTCtcF4.s:266    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccTCtcF4.s:270    .text.main:0000000000000000 $t
     /tmp/ccTCtcF4.s:276    .text.main:0000000000000000 main
     /tmp/ccTCtcF4.s:332    .text.main:000000000000003c $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart2
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_CAN1_Init
MX_USART2_UART_Init
setbuf
puts
CanActivation
CanVescDrive
_impure_ptr
